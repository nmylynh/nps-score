{"version":3,"sources":["components/modal/index.js","actions/totals.js","actions/auth.js","actions/nps.js","components/nav.js","components/hero.js","components/card.js","components/row.js","components/footer.js","components/userNPS.js","App.js","reducers/authReducer.js","reducers/totalsReducer.js","reducers/npsReducer.js","reducers/index.js","index.js"],"names":["Modal","handleClose","show","login","currentUser","loggedIn","loading","useState","username","password","state","setState","useEffect","handleSubmit","e","preventDefault","showHideClassName","className","onSubmit","name","type","value","placeholder","onChange","handleChange","onClick","evt","target","BASE_URL","token","headers","authorization","localStorage","getItem","fetchUserNPS","id","dispatch","axios","get","then","res","payload","data","catch","err","connect","auth","creds","post","setItem","jwtDecode","logout","props","setShow","link","text","href","signUp","signedIn","Hero","Card","start","end","calculate","action","totalPromoters","totalPassives","totalDetractors","clear","0","1","2","3","4","5","6","7","8","9","10","promoters","passives","detractors","sum","selectState","selectProps","input","nums","i","unshift","range","map","key","pattern","totalInput","sumOfAllTypes","percentage","Math","round","percentages","calcNps","nps","column","calc","renderComponent","selectLine","Number","totals","updatePromoters","total","updatePassives","updateDetractors","toggleClear","bool","reset","setReset","row","header","body","countAndGroup","toggle","startOver","registerSuccess","register","user","addNPS","sentNPS","description","window","confirm","saveNps","subject","npsObj","user_id","total_promoters","total_passives","total_detractors","nps_score","dashboard","UserNPS","npsList","userNPS","created_at","split","length","initialState","totalsReducer","INITIAL_STATE","errors","NPS","combineReducers","fetching","filtered","filter","filteredNPS","removeItem","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53d05d5f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { RotateCircleLoading } from \"react-loadingg\";\r\n\r\n// the login modal--I wasn't going to implement react router because I wanted a quick option\r\nexport default function Modal({\r\n  handleClose,\r\n  show,\r\n  login,\r\n  currentUser,\r\n  loggedIn,\r\n  loading\r\n}) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      handleClose();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    login({ username: state.username, password: state.password });\r\n  };\r\n\r\n  // change class name to show modal or not\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main fade-in\">\r\n        {loading ? (\r\n          <RotateCircleLoading />\r\n        ) : (\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"form-login\">\r\n              <input\r\n                name=\"username\"\r\n                type=\"email\"\r\n                value={state.username}\r\n                placeholder=\"Your email address\"\r\n                onChange={handleChange}\r\n                className=\"form modal-items\"\r\n              />\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={state.password}\r\n                placeholder=\"Choose a password\"\r\n                onChange={handleChange}\r\n                className=\"form modal-items\"\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n                className=\"submit form modal-items\"\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"form modal-items close submit\"\r\n              onClick={handleClose}\r\n            >\r\n              Close\r\n            </button>\r\n          </form>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    });\r\n  }\r\n}\r\n","export const UPDATE_PROMOTERS = 'UPDATE_PROMOTERS';\r\nexport const UPDATE_PASSIVES = 'UPDATE_PASSIVES';\r\nexport const UPDATE_DETRACTORS = 'UPDATE_DETRACTORS';\r\nexport const CLEAR_FORM = 'CLEAR_FORM';\r\n\r\n\r\nexport const updatePromoters = (total) => (\r\n    {\r\n        type: UPDATE_PROMOTERS,\r\n        payload: total\r\n    }\r\n)\r\n\r\nexport const updatePassives = (total) => (\r\n    {\r\n        type: UPDATE_PASSIVES,\r\n        payload: total\r\n    }\r\n)\r\n\r\nexport const updateDetractors = (total) => (\r\n    {\r\n        type: UPDATE_DETRACTORS,\r\n        payload: total\r\n    }\r\n)\r\n\r\nexport const toggleClear = (bool) => (\r\n    {\r\n        type: CLEAR_FORM,\r\n        payload: !bool\r\n    }\r\n)\r\n\r\n","import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nexport const REGISTER_START = 'REGISTER_START';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nconst BASE_URL = 'https://nmylynh-nps.herokuapp.com';\r\n\r\n\r\nexport const register = (user) => dispatch => {\r\n    dispatch({ type: REGISTER_START });\r\n\r\n    axios\r\n        .post(`${BASE_URL}/auth/register`, user)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REGISTER_FAILURE,\r\n                payload: err\r\n            })\r\n        })\r\n}\r\n\r\nexport const login = (creds) => dispatch => {\r\n    dispatch({ type: LOGIN_START });\r\n\r\n    axios\r\n        .post(`${BASE_URL}/auth/login`, creds)\r\n        .then(res => {\r\n            localStorage.setItem('jwt', res.data.token);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: jwtDecode(res.data.token)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: LOGIN_FAILURE,\r\n                payload: err\r\n            })\r\n        })\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_USER\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const FETCH_USER_NPS_START = \"FETCH_USER_NPS_START\";\r\nexport const FETCH_USER_NPS_SUCCESS = \"FETCH_USER_NPS_SUCCESS\";\r\nexport const FETCH_USER_NPS_FAILURE = \"FETCH_USER_NPS_FAILURE\";\r\n\r\nexport const FETCH_NPS_START = \"FETCH_NPS_START\";\r\nexport const FETCH_NPS_SUCCESS = \"FETCH_NPS_SUCCESS\";\r\nexport const FETCH_NPS_FAILURE = \"FETCH_NPS_FAILURE\";\r\n\r\nexport const ADD_NPS_START = \"ADD_NPS_START\";\r\nexport const ADD_NPS_SUCCESS = \"ADD_NPS_SUCCESS\";\r\nexport const ADD_NPS_FAILURE = \"ADD_NPS_FAILURE\";\r\n\r\nexport const UPDATE_NPS_START = \"UPDATE_NPS_START\";\r\nexport const UPDATE_NPS_SUCCESS = \"UPDATE_NPS_SUCCESS\";\r\nexport const UPDATE_NPS_FAILURE = \"UPDATE_NPS_FAILURE\";\r\n\r\nexport const DELETE_NPS_START = \"DELETE_NPS_START\";\r\nexport const DELETE_NPS_SUCCESS = \"DELETE_NPS_SUCCESS\";\r\nexport const DELETE_NPS_FAILURE = \"DELETE_NPS_FAILURE\";\r\n\r\n//Switches base_url based on environment variable\r\nconst BASE_URL = \"https://nmylynh-nps.herokuapp.com\";\r\n\r\nconst token = {\r\n  headers: { authorization: localStorage.getItem(\"jwt\") }\r\n};\r\n\r\n//Fetches all NPS entries\r\nexport const fetchNPS = () => dispatch => {\r\n  dispatch({ type: FETCH_NPS_START });\r\n\r\n  return axios\r\n    .get(`${BASE_URL}/nps`, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_NPS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n\r\n// Fetches all nps of a user by user id\r\nexport const fetchUserNPS = id => dispatch => {\r\n  dispatch({ type: FETCH_USER_NPS_START });\r\n\r\n  axios\r\n    .get(`${BASE_URL}/users/${id}/nps`, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_USER_NPS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_USER_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n\r\n//Fetches single NPS by id\r\nexport const fetchNPSById = id => dispatch => {\r\n  dispatch({ type: FETCH_NPS_START });\r\n\r\n  axios\r\n    .get(`${BASE_URL}/nps/${id}`, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_NPS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n\r\n//Adds new NPS entry\r\nexport const addNPS = sentNPS => dispatch => {\r\n  dispatch({ type: ADD_NPS_START });\r\n  return axios\r\n    .post(`${BASE_URL}/nps`, sentNPS, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_NPS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n\r\n//Updates NPS entry by id\r\nexport const updateNPS = editedNPS => dispatch => {\r\n  dispatch({ type: UPDATE_NPS_START });\r\n  axios\r\n    .put(`${BASE_URL}/nps/${editedNPS.id}`, editedNPS, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: UPDATE_NPS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: UPDATE_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n\r\n//Deletes NPS entry by id\r\nexport const deleteNPS = id => dispatch => {\r\n  dispatch({ type: DELETE_NPS_START });\r\n\r\n  axios\r\n    .delete(`${BASE_URL}/nps/${id}`, token)\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_NPS_SUCCESS,\r\n        payload: id\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_NPS_FAILURE,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, logout } from \"../actions\";\r\n\r\n// Navbar for the app\r\nfunction NavBar(props) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  // toggle the modal to show or not\r\n  const handleClose = () => setShow(!show);\r\n\r\n  // placeholder, but if using react router you would use Link to\r\n  const link = (text, link) => (\r\n    <li>\r\n      <a href={link}>{text}</a>\r\n    </li>\r\n  );\r\n\r\n  const signUp = (\r\n    <li>\r\n      <a href=\"#!\" onClick={() => setShow(true)}>\r\n        Sign in\r\n      </a>\r\n    </li>\r\n  );\r\n\r\n  const signedIn = (\r\n    <li>\r\n      <a href=\"#!\" onClick={props.logout}>\r\n        Logout\r\n      </a>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section className=\"navigation\">\r\n        <div className=\"nav-container\">\r\n          <nav>\r\n            <div className=\"nav-mobile\">\r\n              <a id=\"nav-toggle\" href=\"#!\">\r\n                <span></span>\r\n              </a>\r\n            </div>\r\n            <ul className=\"nav-list\">\r\n              <div className=\"nav-left\">\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    Product <i className=\"fas fa-chevron-down\"></i>\r\n                  </a>\r\n                  <ul className=\"nav-dropdown\">\r\n                    {link(\"Product 1\", \"#!\")}\r\n                    {link(\"Product 2\", \"#!\")}\r\n                    {link(\"Product 3\", \"#!\")}\r\n                  </ul>\r\n                </li>\r\n                {link(\"Customers\", \"#!\")}\r\n                {link(\"Enterprise\", \"#!\")}\r\n                {link(\"Pricing\", \"#!\")}\r\n              </div>\r\n              <div className=\"nav-right\">\r\n                <li>\r\n                  <a href=\"#!\">\r\n                    Help <i className=\"fas fa-chevron-down\"></i>\r\n                  </a>\r\n                  <ul className=\"nav-dropdown\">\r\n                    {link(\"Help 1\", \"#!\")}\r\n                    {link(\"Help 2\", \"#!\")}\r\n                    {link(\"Help 3\", \"#!\")}\r\n                  </ul>\r\n                </li>\r\n                {link(\"Get started for free\", \"#!\")}\r\n                {props.currentUser ? signedIn : signUp}\r\n              </div>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </section>\r\n      {/* login component */}\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        login={props.login}\r\n        currentUser={props.currentUser}\r\n        loggedIn={props.loggedIn}\r\n        loading={props.loading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  currentUser: auth.currentUser,\r\n  loggedIn: auth.loggedIn,\r\n  loading: auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, logout })(NavBar);\r\n","import React from \"react\";\r\n\r\n// Hero text for the app\r\nexport default function Hero() {\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"section section-hero hero-container\">\r\n        <div className=\"hero\">\r\n          <div className=\"container\">\r\n            <div className=\"cols\">\r\n              <div className=\"heading-wrapper\">\r\n                  <h1 className=\"hero-heading\">\r\n                    Calculate your NPS® (Net Promoter Score)\r\n                  </h1>\r\n                  <p>\r\n                    Calculating your NPS score is as simple as tallying up your\r\n                    responses and subtracting the percentage of detractors from\r\n                    the percentage of promoters. The score is a whole number\r\n                    that ranges from -100 to 100, and indicates customer\r\n                    happiness with your brand experience.\r\n                  </p>\r\n                  <p>\r\n                    Use the calculator below to calculate your NPS from your\r\n                    survey responses.\r\n                  </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Renders each card of the calculator dependent on the props\r\nexport default function Card(props) {\r\n  // props\r\n  let {\r\n    start,\r\n    end,\r\n    type,\r\n    calculate,\r\n    action,\r\n    totalPromoters,\r\n    totalPassives,\r\n    totalDetractors, \r\n    clear\r\n  } = props;\r\n\r\n  // local state\r\n  const [state, setState] = useState({\r\n    0: 0,\r\n    1: 0,\r\n    2: 0,\r\n    3: 0,\r\n    4: 0,\r\n    5: 0,\r\n    6: 0,\r\n    7: 0,\r\n    8: 0,\r\n    9: 0,\r\n    10: 0,\r\n    promoters: totalPromoters,\r\n    passives: totalPassives,\r\n    detractors: totalDetractors\r\n  });\r\n\r\n  // ***UPDATERS***\r\n\r\n  // updates the store depending on inputs\r\n  useEffect(() => {\r\n    if (calculate === \"inputs\") {\r\n      action(sum(type));\r\n    } else if (calculate === \"totals\") {\r\n      action(selectState(type));\r\n    }\r\n  }, [state]);\r\n\r\n  // updates the local state to reflect new changes in totals\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      [type]: selectProps(type)\r\n    });\r\n  }, [totalPromoters, totalPassives, totalDetractors]);\r\n\r\n  // clears form\r\n  useEffect(() => {\r\n    setState({\r\n      0: 0,\r\n      1: 0,\r\n      2: 0,\r\n      3: 0,\r\n      4: 0,\r\n      5: 0,\r\n      6: 0,\r\n      7: 0,\r\n      8: 0,\r\n      9: 0,\r\n      10: 0,\r\n      promoters: 0,\r\n      passives: 0,\r\n      detractors: 0\r\n    });\r\n  }, [clear]);\r\n\r\n  \r\n  // ***CONDITIONAL ELEMENTS***\r\n\r\n  // counting inputs element\r\n  let nums = range(end, start + 1);\r\n  const input = nums.map(i => (\r\n    <div key={i} className=\"total\">\r\n      <div>{i}</div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          pattern=\"[0-9]*\"\r\n          name={i}\r\n          value={state[i]}\r\n          className=\"total-input\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  // totals element\r\n  const totalInput = (\r\n    <div className=\"total\">\r\n      <div>Total</div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          pattern=\"[0-9]*\"\r\n          name={type}\r\n          value={selectState(type)}\r\n          className=\"total-input\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // percentages element\r\n  const sumOfAllTypes = totalPromoters + totalPassives + totalDetractors;\r\n  const percentage = type =>\r\n    Math.round((selectProps(type) / sumOfAllTypes) * 100);\r\n  const percentages = (\r\n    <div className=\"total\">\r\n      <div className=\"total-percent\">\r\n        {`${percentage(type) ? percentage(type) : 0}%`}\r\n      </div>\r\n      <div className=\"total-label\">of total responses</div>\r\n    </div>\r\n  );\r\n\r\n  // nps element\r\n  const calcNps = () => percentage(\"promoters\") - percentage(\"detractors\");\r\n  const nps = (\r\n    <div className=\"total\">\r\n      <div className=\"total-percent\">\r\n        {calcNps() ? calcNps() : 0}\r\n      </div>\r\n      <div className=\"total-label\">This is your NPS.</div>\r\n    </div>\r\n  );\r\n\r\n  // main card component\r\n  return (\r\n    <div className={`column column-${column(type)}`}>\r\n      <div className={`group group-${type}`}>\r\n        <div\r\n          className={`emote image-${type}`}\r\n        ></div>\r\n        <div className=\"totals\">{renderComponent(calculate)}</div>\r\n        {selectLine(type, calculate)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // ***HELPER FUNCTIONS***\r\n\r\n  // renders the amount of input fields depending on a range\r\n  function range(start, end) {\r\n    let nums = [];\r\n    for (let i = start; i < end; i++) {\r\n      nums.unshift(i);\r\n    }\r\n    return nums;\r\n  }\r\n\r\n  // handles the changes in inputs\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setState({\r\n      ...state,\r\n      [name]: Number(value) ? Number(value) : 0\r\n    });\r\n  }\r\n\r\n  // places the type in the appropriate columns\r\n  function column(type) {\r\n    if (type === \"promoters\") {\r\n      return \"2\";\r\n    } else if (type === \"passives\") {\r\n      return \"3\";\r\n    } else if (type === \"detractors\") {\r\n      return \"4\";\r\n    } else if (type === \"nps\") {\r\n      return \"6\";\r\n    }\r\n  }\r\n\r\n  // sums up the amount of responses\r\n  function sum(type) {\r\n    if (type === \"promoters\") {\r\n      return state[10] + state[9];\r\n    } else if (type === \"passives\") {\r\n      return state[8] + state[7];\r\n    } else if (type === \"detractors\") {\r\n      return (\r\n        state[6] +\r\n        state[5] +\r\n        state[4] +\r\n        state[3] +\r\n        state[2] +\r\n        state[1] +\r\n        state[0]\r\n      );\r\n    }\r\n  }\r\n\r\n  // selects the local state depending on type\r\n  function selectState(type) {\r\n    if (type === \"promoters\") {\r\n      return state.promoters;\r\n    } else if (type === \"passives\") {\r\n      return state.passives;\r\n    } else if (type === \"detractors\") {\r\n      return state.detractors;\r\n    }\r\n  }\r\n\r\n  // selects the props depending on the type\r\n  function selectProps(type) {\r\n    if (type === \"promoters\") {\r\n      return totalPromoters;\r\n    } else if (type === \"passives\") {\r\n      return totalPassives;\r\n    } else if (type === \"detractors\") {\r\n      return totalDetractors;\r\n    }\r\n  }\r\n\r\n  // renders the appropriate component depending on what you want to calculate\r\n  function renderComponent(calc) {\r\n    if (calc === \"inputs\") {\r\n      return input;\r\n    } else if (calc === \"totals\") {\r\n      return totalInput;\r\n    } else if (calc === \"percentages\") {\r\n      return percentages;\r\n    } else if (calc === \"nps\") {\r\n      return nps;\r\n    }\r\n  }\r\n\r\n  // selects appropriate image for each card\r\n  function selectLine(type, calc) {\r\n    if (calc === \"inputs\") {\r\n      return (\r\n        <div\r\n          className={`connect inputs inputs-${type} inputs-image-${type}`}\r\n        ></div>\r\n      );\r\n    } else if (calc === \"totals\" && type === \"promoters\") {\r\n      return (\r\n        <div className=\"connect totals-promoters totals-image-promoters\"></div>\r\n      );\r\n    } else if (calc === \"totals\" && type === \"detractors\") {\r\n      return (\r\n        <div className=\"connect totals-detractors totals-image-detractors\"></div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  updatePromoters,\r\n  updatePassives,\r\n  updateDetractors,\r\n  toggleClear\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"./card\";\r\n\r\n// renders each row of the nps calculator dependent on the props\r\nfunction Row(props) {\r\n\r\n  let [reset, setReset] = useState(false)\r\n\r\n  let {\r\n    row,\r\n    header,\r\n    body,\r\n    totalPromoters,\r\n    totalPassives,\r\n    totalDetractors,\r\n    calculate,\r\n    clear\r\n  } = props;\r\n\r\n  // clears when reset is changed\r\n  useEffect(() => {\r\n      props.toggleClear(reset)\r\n  }, [reset])\r\n\r\n\r\n  // ***CONDITIONAL ELEMENTS***\r\n\r\n  // element to count responses and sum the totals\r\n  const countAndGroup = (\r\n    <>\r\n      <Card\r\n        start={10}\r\n        end={9}\r\n        type=\"promoters\"\r\n        calculate={calculate}\r\n        action={props.updatePromoters}\r\n        totalPromoters={totalPromoters}\r\n        clear={clear}\r\n      />\r\n\r\n      <Card\r\n        start={8}\r\n        end={7}\r\n        type=\"passives\"\r\n        calculate={calculate}\r\n        action={props.updatePassives}\r\n        totalPassives={totalPassives}\r\n        clear={clear}\r\n      />\r\n\r\n      <Card\r\n        start={6}\r\n        end={0}\r\n        type=\"detractors\"\r\n        calculate={calculate}\r\n        action={props.updateDetractors}\r\n        totalDetractors={totalDetractors}\r\n        clear={clear}\r\n      />\r\n    </>\r\n  );\r\n\r\n  // element to calculate percentages\r\n  const percentages = (\r\n    <>\r\n      <Card\r\n        type=\"promoters\"\r\n        calculate={calculate}\r\n        action={props.updatePromoters}\r\n        totalPromoters={totalPromoters}\r\n        totalPassives={totalPassives}\r\n        totalDetractors={totalDetractors}\r\n      />\r\n\r\n      <div className=\"column column-3\">\r\n        <div className=\"operator operator-minus\">&minus;</div>\r\n      </div>\r\n\r\n      <Card\r\n        type=\"detractors\"\r\n        calculate={calculate}\r\n        action={props.updateDetractors}\r\n        totalPromoters={totalPromoters}\r\n        totalPassives={totalPassives}\r\n        totalDetractors={totalDetractors}\r\n      />\r\n\r\n      <div className=\"column column-5\">\r\n        <div className=\"operator operator-equal\">=</div>\r\n      </div>\r\n\r\n      <Card\r\n        type=\"nps\"\r\n        calculate=\"nps\"\r\n        totalPromoters={totalPromoters}\r\n        totalPassives={totalPassives}\r\n        totalDetractors={totalDetractors}\r\n      />\r\n    </>\r\n  );\r\n\r\n  // main row component\r\n  return (\r\n    <div className={`row row-${row}`}>\r\n      <div className=\"column column-1\">\r\n        <div className=\"instructions\">\r\n          <h3>{header}</h3>\r\n          <p>\r\n            {body}\r\n            {startOver(calculate)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {renderComponent(calculate)}\r\n    </div>\r\n  );\r\n\r\n  // ***HELPER FUNCTIONS***\r\n\r\n  // render component depending on what you want to calculate\r\n  function renderComponent(calc) {\r\n    if (calc === \"totals\" || calc === \"inputs\") {\r\n      return countAndGroup;\r\n    } else if (calc === \"percentages\") {\r\n      return percentages;\r\n    }\r\n  }\r\n\r\n  function toggle(e){\r\n    e.preventDefault()\r\n    setReset(!reset)\r\n  }\r\n\r\n  function startOver(calc) {\r\n    if (calc === \"percentages\") {\r\n      return (\r\n          <strong className=\"clear\">\r\n          <a className=\"clear-link\" href=\"#\" onClick={toggle}>\r\n            Start over\r\n          </a>\r\n          </strong>\r\n        \r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// redux connection\r\nconst mapStateToProps = ({ totals, auth }) => ({\r\n  totalPromoters: totals.totalPromoters,\r\n  totalPassives: totals.totalPassives,\r\n  totalDetractors: totals.totalDetractors,\r\n  clear: totals.clear,\r\n  currentUser: auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updatePromoters,\r\n  updatePassives,\r\n  updateDetractors,\r\n  toggleClear\r\n})(Row);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { register, addNPS, fetchUserNPS } from \"../actions\";\r\n\r\n// footer with the sign up and share buttons, renders differently if signed in or not\r\nfunction Footer(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  let { totalPromoters, totalPassives, totalDetractors } = props.totals;\r\n\r\n  // on register success, give a success message\r\n  useEffect(() => {\r\n    if (props.registerSuccess) {\r\n      window.confirm(\"Thanks! You've successfully registered.\");\r\n    }\r\n  }, [props.registerSuccess]);\r\n\r\n  // calculates the nps to send to the API\r\n  const sumOfAllTypes = totalPromoters + totalPassives + totalDetractors;\r\n  const calcNps = () =>\r\n    Math.round(\r\n      (totalPromoters / sumOfAllTypes) * 100 -\r\n        (totalPromoters / sumOfAllTypes) * 100\r\n    );\r\n\r\n  // sends email and password to the server to register\r\n  const register = e => {\r\n    e.preventDefault();\r\n    props.register({ username: state.username, password: state.password });\r\n  };\r\n\r\n  // sends the current nps data to the API, and refetches user nps data\r\n  const saveNps = e => {\r\n    const id = props.currentUser.subject\r\n    e.preventDefault();\r\n    let npsObj = {\r\n      name: state.name,\r\n      description: state.description,\r\n      user_id: id ? id : null,\r\n      total_promoters: totalPromoters,\r\n      total_passives: totalPassives,\r\n      total_detractors: totalDetractors,\r\n      nps_score: calcNps() ? calcNps() : 0\r\n    };\r\n    props.addNPS(npsObj);\r\n    setState({\r\n      name: \"\",\r\n      description: \"\"\r\n    });\r\n    props.fetchUserNPS(props.currentUser.subject);\r\n  };\r\n\r\n  // renders the nps save option if a user is logged in\r\n  const dashboard = (\r\n    <form className=\"form\" onSubmit={saveNps}>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={state.name}\r\n        placeholder=\"The name of this project\"\r\n        onChange={handleChange}\r\n        className=\"send-nps\"\r\n      />\r\n      <input\r\n        name=\"description\"\r\n        type=\"textarea\"\r\n        value={state.description}\r\n        placeholder=\"Describe this project\"\r\n        onChange={handleChange}\r\n        className=\"send-nps\"\r\n      />\r\n      <div className=\"button\">\r\n        <button className=\"submit send-nps\" type=\"submit\" onClick={saveNps}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  // renders sign up if a user isn't logged in\r\n  const signUp = (\r\n    <form className=\"form\" onSubmit={register}>\r\n      <input\r\n        id=\"email\"\r\n        name=\"username\"\r\n        type=\"email\"\r\n        value={state.username}\r\n        placeholder=\"Your email address\"\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        id=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={state.password}\r\n        placeholder=\"Choose a password\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className=\"button\">\r\n        <button type=\"submit\" id=\"get-started\" onClick={register}>\r\n          Get Started\r\n        </button>\r\n        or\r\n        <button type=\"submit\" id=\"google\">\r\n          Sign up with Google\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"section section-ruled\">\r\n      <div className=\"container\">\r\n        <div className=\"cols\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"heading\">\r\n              <h2>\r\n                {props.currentUser\r\n                  ? \"Would you like to save your current NPS information?\"\r\n                  : \"Interested in improving your customer experience with NPS?\"}\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {props.currentUser ? dashboard : signUp}\r\n\r\n      <div className=\"container container-social\">\r\n        <div className=\"social\">\r\n          <a className=\"fab fa-twitter\" href=\"#\"></a>\r\n          <a className=\"fab fa-facebook-f\" href=\"#\"></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // handles the changes in inputs\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ totals, auth }) => ({\r\n  totals: totals,\r\n  registerSuccess: auth.registerSuccess,\r\n  currentUser: auth.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, addNPS, fetchUserNPS })(\r\n  Footer\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemHeading,\r\n  AccordionItemButton,\r\n  AccordionItemPanel\r\n} from \"react-accessible-accordion\";\r\nimport \"react-accessible-accordion/dist/fancy-example.css\";\r\n\r\n// renders the user's nps\r\nfunction UserNPS(props) {\r\n  const { userNPS } = props;\r\n\r\n  // accordion component for each nps data in the API response, very little styling because honestly I'm just showing functionality\r\n  const npsList = userNPS.map(nps => (\r\n    <AccordionItem key={nps.id}>\r\n      <AccordionItemHeading>\r\n        <AccordionItemButton>\r\n          {nps.name} created on {formatDate(nps.created_at)}\r\n        </AccordionItemButton>\r\n      </AccordionItemHeading>\r\n      <AccordionItemPanel>\r\n        <p>Description: {nps.description}</p>\r\n        <p>\r\n          Total participants:{\" \"}\r\n          {nps.total_promoters + nps.total_passives + nps.total_detractors}\r\n        </p>\r\n        <p>NPS score: {nps.nps_score}</p>\r\n      </AccordionItemPanel>\r\n    </AccordionItem>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"section section-ruled projects-section\">\r\n      <div className=\"container\">\r\n        <div className=\"cols\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"heading\">\r\n              <h2>Your past projects:</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Accordion>{npsList}</Accordion>\r\n    </div>\r\n  );\r\n  function formatDate(date) {\r\n    return date.split(\"T\")[0];\r\n  }\r\n}\r\n\r\nexport default UserNPS;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/nav\";\r\nimport Hero from \"./components/hero\";\r\nimport Row from \"./components/row\";\r\nimport Footer from \"./components/footer\";\r\nimport UserNps from \"./components/userNPS\";\r\nimport { fetchUserNPS } from \"./actions\";\r\n\r\nfunction App(props) {\r\n  // load user's nps data\r\n  useEffect(() => {\r\n    if (props.currentUser) {\r\n      props.fetchUserNPS(props.currentUser.subject);\r\n    }\r\n  }, [props.currentUser]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Hero />\r\n      <div className=\"section section-bg section-ruled section-labeled label-container-outer\">\r\n        <div className=\"label-container-inner\">\r\n          <div className=\"label\">NPS Calculator</div>\r\n        </div>\r\n        <div className=\"container container-nps\">\r\n          <div className=\"cols\">\r\n            <div className=\"wrapper\">\r\n              <div className=\"nps\">\r\n                <Row\r\n                  row={1}\r\n                  calculate=\"inputs\"\r\n                  header=\"Count the responses\"\r\n                  body=\"Add up the number of responses provided for each score.\"\r\n                />\r\n                <Row\r\n                  row={2}\r\n                  calculate=\"totals\"\r\n                  header=\"Group the responses\"\r\n                  body=\"Add up the total number of responses provided for each group.\"\r\n                />\r\n                <Row\r\n                  row={3}\r\n                  calculate=\"percentages\"\r\n                  header=\"Calculate your NPS\"\r\n                  body=\"Subtract the percentage of Detractors from the percentage of Promoters.\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      {props.currentUser && props.userNPS.length > 0 ? (\r\n        <UserNps currentUser={props.currentUser} userNPS={props.userNPS} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\n// redux connection\r\nconst mapStateToProps = ({ nps, auth }) => ({\r\n  currentUser: auth.currentUser,\r\n  userNPS: nps.userNPS\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUserNPS })(App);\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_USER,\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE\r\n} from \"../actions\";\r\n\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst INITIAL_STATE = (token => ({\r\n  loggedIn: false,\r\n  currentUser: token ? jwtDecode(token) : 0,\r\n  registerSuccess: false,\r\n  loading: false,\r\n  errors: []\r\n}))(localStorage.getItem(\"jwt\"));\r\n\r\nexport default function authReducer(state = INITIAL_STATE, { type, payload }) {\r\n  switch (type) {\r\n    case LOGOUT_USER:\r\n      localStorage.removeItem(\"jwt\");\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        currentUser: 0\r\n      };\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        loading: true\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        currentUser: payload,\r\n        loading: false\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        errors: payload,\r\n        loading: false\r\n      };\r\n    case REGISTER_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        errors: null,\r\n        registerSuccess: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_PROMOTERS,\r\n  UPDATE_PASSIVES,\r\n  UPDATE_DETRACTORS,\r\n  CLEAR_FORM\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  totalPromoters: 0,\r\n  totalPassives: 0,\r\n  totalDetractors: 0,\r\n  clear: false\r\n};\r\n\r\nconst totalsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_PROMOTERS:\r\n      return {\r\n        ...state,\r\n        totalPromoters: payload\r\n      };\r\n\r\n    case UPDATE_PASSIVES:\r\n      return {\r\n        ...state,\r\n        totalPassives: payload\r\n      };\r\n\r\n    case UPDATE_DETRACTORS:\r\n      return {\r\n        ...state,\r\n        totalDetractors: payload\r\n      };\r\n    case CLEAR_FORM:\r\n      return {\r\n        ...state,\r\n        clear: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default totalsReducer;\r\n","import {\r\n  ADD_NPS_START,\r\n  ADD_NPS_SUCCESS,\r\n  ADD_NPS_FAILURE,\r\n  FETCH_NPS_START,\r\n  FETCH_NPS_SUCCESS,\r\n  FETCH_NPS_FAILURE,\r\n  UPDATE_NPS_START,\r\n  UPDATE_NPS_SUCCESS,\r\n  UPDATE_NPS_FAILURE,\r\n  DELETE_NPS_START,\r\n  DELETE_NPS_SUCCESS,\r\n  DELETE_NPS_FAILURE,\r\n  FETCH_USER_NPS_START,\r\n  FETCH_USER_NPS_SUCCESS,\r\n  FETCH_USER_NPS_FAILURE\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  userNPS: [],\r\n  NPS: [],\r\n  errors: {}\r\n};\r\n\r\n// CRUD operations that work but ATM not implemented\r\nexport default function NPSReducer(state = INITIAL_STATE, { type, payload }) {\r\n  switch (type) {\r\n    case FETCH_USER_NPS_START:\r\n      return {\r\n        ...state\r\n      };\r\n    case FETCH_USER_NPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userNPS: payload\r\n      };\r\n    case FETCH_USER_NPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: payload\r\n      };\r\n    case FETCH_NPS_START:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n      };\r\n    case FETCH_NPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        NPS: payload\r\n      };\r\n    case FETCH_NPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        errors: payload\r\n      };\r\n    case ADD_NPS_START:\r\n      return {\r\n        ...state\r\n      };\r\n    case ADD_NPS_SUCCESS:\r\n      return {\r\n        ...state\r\n      };\r\n    case ADD_NPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: payload\r\n      };\r\n    case UPDATE_NPS_START:\r\n      return {\r\n        ...state\r\n      };\r\n    case UPDATE_NPS_SUCCESS:\r\n      const filtered = state.nps.filter(e => {\r\n        return e.id !== payload.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        nps: [payload, ...filtered]\r\n      };\r\n    case UPDATE_NPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: payload\r\n      };\r\n    case DELETE_NPS_START:\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_NPS_SUCCESS:\r\n      const { nps } = state;\r\n      const filteredNPS = nps.filter(e => {\r\n        return e.id !== payload;\r\n      });\r\n      return {\r\n        ...state,\r\n        nps: [...filteredNPS]\r\n      };\r\n    case DELETE_NPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport totalsReducer from './totalsReducer';\r\nimport authReducer from './authReducer';\r\nimport npsReducer from './npsReducer'\r\n\r\nexport default combineReducers({\r\n    nps: npsReducer,\r\n    totals: totalsReducer,\r\n    auth: authReducer\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}